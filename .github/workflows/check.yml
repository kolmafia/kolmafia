name: Check

on:
  pull_request:

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    name: Run Checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Prepare Workspace
        run: mkdir -p ./build

      - name: Run Checks (including tests)
        run: ./gradlew --no-daemon check

      - name: Run Checks Java 11 (including tests)
        env:
          ORG_GRADLE_PROJECT_javaSourceCompatibility: 11
          ORG_GRADLE_PROJECT_javaTargetCompatibility: 11
        run: ./gradlew --no-daemon check

      - name: Run Checks Java 17 (including tests)
        env:
          ORG_GRADLE_PROJECT_javaSourceCompatibility: 17
          ORG_GRADLE_PROJECT_javaTargetCompatibility: 17
        run: ./gradlew --no-daemon check

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/build/test-results/test/TEST-*.xml"

  # Our branch protection requires a check called "Run Tests".
  # This is incompatible with the strategy matrix we use above, since that
  # mutates the job name for each subjob. Thus, create a single dependent task
  # that blocks on all of the components of `check` passing before it runs.
  test:
    needs: check
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo 'All checks succeeded.'
