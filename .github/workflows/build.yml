name: Build

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  bin:
    if: github.repository == 'kolmafia/kolmafia'
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Build
        env:
          ORG_GRADLE_PROJECT_commit: ${{ github.sha }}
        run: ./gradlew --no-daemon jpackage

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: releases
          path: |
            build/releases/*.deb
            build/releases/*.exe
            build/releases/*.dmg

  jar:
    if: github.repository == 'kolmafia/kolmafia'
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Build
        env:
          ORG_GRADLE_PROJECT_commit: ${{ github.sha }}
        run: ./gradlew --no-daemon shadowJar

      - name: Upload files
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.jar

  release:
    needs: [bin, jar]
    if: github.repository == 'kolmafia/kolmafia'
    name: Publish Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Retrieve version and tag
        run: |
          KOLMAFIA_VERSION=$(git rev-list --count $GITHUB_SHA)
          git tag "r$KOLMAFIA_VERSION"
          echo "KOLMAFIA_VERSION=$KOLMAFIA_VERSION" >> $GITHUB_ENV

      - name: Download binaries
        uses: actions/download-artifact@v2

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.jar
            releases/*.deb
            releases/*.exe
            releases/*.dmg
          tag_name: r${{ env.KOLMAFIA_VERSION }}
          name: ${{ env.KOLMAFIA_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
